1.  Start Game with welcome message and Adventure inventory

2.  Instantiate Player 

3.  Create List for all Rooms

4.  Load Room 1
        Add to list

5.  Enter Room 1
        Present Room
        Fight
        Set Room state to "No Enemy"
        What do you want to do
            Loot
            Go to
                If door
                    What do you want to do?
                If wall
                    Present message
                    What do you want to do?
                If corridor
                    Go to 
                    Exit Room
6.  Load next Room
        Add to list

7.  Enter Room 2
        Do same as in Room 1


Running from a fight will always reset player to Room 0.

// It would be cool to track which room we are in and automatically
// enter the appropriate room.
    // We could implement a boolean in class Room, that does that for us.
    // If boolean "active" == true -> Player is currently in this room.
    // If boolean "active" == false -> Player is not in this room.
    // Entering and exiting a room would then be setting active to
    // true or false.
    // We could then use a while loop (player.hp > 0) to loop through
    // the list of all rooms and always enter, present and fight in
    // the room where active == true.

// How do we switch rooms? How will Main know, which room to set as active 
// next? 
// AllRooms stores all the Rooms. 
// We can then use a simple if statement that checks agains "Room.Active"
// and then does the "AllRooms[x].EnterRoom()" function.

// New TODO
    // Make a subclass "Actions" for all possible Actions
        Methodtype: void
        Arguments:  playerAction, Walls, player
        Naming:     Action.GoTo, Action.OpenDoor, Action.SearchRoom

    // Add boolean to objects: "Can be opened" -> check in Action.Open 
       and exit Action.Open Method if object can't be opened.

    // RoomBoundary: 
    /* KeyID maps to which door is this.
       NextRoom maps to which room is behind this door.
            If KeyID is not null and NextRoom is not null. 
                This is a locked door, room behind is NextRoom.
            If KeyID is null and NextRoom is not null.  
                This is an open door, room behind is NextRoom.
            If KeyID is null and NextRoom is null.
                This is a wall.

    // Messages don't need to be a method. 
        // Use Console.WriteLine(String.Format(stringName, variableContentName));

    // WhatToDo needs to be made anew. 

    // EnterRoom needs to be made anew.

    // Create a Dictionary "Items" with ID and name.
